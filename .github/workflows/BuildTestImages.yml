name: Build All Test Images
run-name: Build All Test Images
on:
  workflow_dispatch:

jobs:
  BuildImages:
    name: Build ${{ matrix.id }}
    #runs-on: ubuntu-latest
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
        #- id: "image"
        #  bit: "32"
        - id: "image64"
          bit: "64"
        #- id: "orangepwn02w"
        #  bit: "64"
        #- id: "bananapwnm2zero"
        #  bit: "32"
        #- id: "bananapwnm4zero"
        #  bit: "64"
        
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          overprovision-lvm: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Prep and Dependencies
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install packer wget gettext qemu-utils qemu-user-static 
          packer plugins install github.com/solo-io/arm-image 
          #packer plugins install github.com/hashicorp/ansible
          
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: .
              
      - name: Build ${{ matrix.id }} Image
        run: |
          pwd
          echo
          ls -lR
          echo ###############################################
          echo starting build...
          echo ###############################################
          packer init builder/pwnagotchi.json.pkr.hcl
          mkdir -p build/stage
          sudo make langs
          if [ "${{ matrix.bit }}" = "32" ]; then
            echo ###############################################
            echo making 32bit base for ${{ matrix.id }}
            echo ###############################################
            sudo make base32
          else
            echo ###############################################
            echo making 64bit base for ${{ matrix.id }}
            echo ###############################################
            sudo make base64
          fi
          echo ###############################################
          echo making 64bit image for ${{ matrix.id }}
          echo ###############################################
          sudo make ${{ matrix.id }}
      
      - name: debug 
        if: failure()
        run: |
          echo ###############################################
          echo ${{ matrix.id }} build failed, listing files
          echo ###############################################
          ls -lR ${{ env.GITHUB_WORKSPACE }}
      
      - name: Upload ${{ matrix.id }} image
        uses: actions/upload-artifact@v4
        with:
          name: Pwnagatchi-${{ matrix.id }}-TestImage-${{ env.GITHUB_RUN_NUMBER }}
          path: ./**/*.xz
