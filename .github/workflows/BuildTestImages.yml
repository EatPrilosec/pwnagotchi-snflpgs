name: Build Test Images
run-name: Build Test Images
on:
  workflow_dispatch:
#    inputs:
#      bb_ver:
#        description: version
#        required: true
#        default: "alpha2"
#        type: string
#      uboot_gh_repo:
#        description: u-boot github repo
#        required: true
#        default: ArchemedIan/u-boot-rockchip
#        type: string
#      uboot_ref:
#        description: u-boot ref
#        required: true
#        default: bb
#        type: string
#      rkbin_ref:
#        description: rkbin ref
#        required: true
#        default: master
#        type: string
#      armbian_gh_repo:
#        description: armbian build github repo
#        required: true
#        default: armbian/build
#        type: string
#      armbian_ref:
#        description: armbian ref
#        required: true
#        default: v23.11
#        type: string
jobs:
  build:
    name: ${{ matrix.id }}
    #runs-on: ubuntu-latest
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - id: "image"
          - id: "image64"
          - id: "orangepwn02w"
          - id: "bananapwnm2zero"
          - id: "bananapwnm4zero"
          #- id: ""
          #- id: ""

    steps:
#      - name: Maximize build space
#        uses: easimon/maximize-build-space@master
#        with:
#          root-reserve-mb: 512
#          swap-size-mb: 1024
#          remove-dotnet: 'true'
#          overprovision-lvm: 'true'
#          remove-android: 'true'
#          remove-haskell: 'true'
#          remove-codeql: 'true'
#          remove-docker-images: 'true'

      - name: prep/dependencies
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install packer wget gettext qemu-utils qemu-user-static 
          packer plugins install github.com/solo-io/arm-image 
          #packer plugins install github.com/hashicorp/ansible
          
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: .
              
      - name: Build ${{ matrix.id }}
        run: |
          pwd
          echo
          ls -lR
          echo ###############################################
          echo starting build...
          echo ###############################################
          packer init builder/pwnagotchi.json.pkr.hcl
          mkdir -p build/stage
          sudo make langs
          if [ "${{ matrix.id }}" = "image" ] || [ "${{ matrix.id }}" = "bananapwnm2zero" ]; then
            echo ###############################################
            echo making 32bit base for ${{ matrix.id }}
            echo ###############################################
            sudo make base32
          else
            echo ###############################################
            echo making 64bit base for ${{ matrix.id }}
            echo ###############################################
            sudo make base64
          fi
          echo ###############################################
          echo making 64bit image for ${{ matrix.id }}
          echo ###############################################
          sudo make ${{ matrix.id }}
      
      - name: debug file listing
        run: |
          ls -l ${{ env.GITHUB_WORKSPACE }}
      
      - name: Upload ${{ matrix.id }} image
        uses: actions/upload-artifact@v4
        with:
          name: Pwnagatchi-${{ matrix.id }}-TestImage-${{ env.GITHUB_RUN_NUMBER }}
          path: pwnagotchi-snflpgs/**/*.xz
