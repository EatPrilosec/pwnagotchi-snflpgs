{
  "builders": [
    {
      "name": "pwnagotchi",
      "type": "arm-image",
      "iso_url": "/root/base_raspios-bullseye-armhf.img.xz",
      "iso_checksum": "none",
      "target_image_size": 9368709120,
      "qemu_binary": "qemu-arm-static",
      "qemu_args": [ "-cpu", "arm1176" ],
      "output_filename": "/root/pwnagotchi-{{user `pwn_version`}}-armhf.img"
    }
  ],
  "provisioners": [
    {
      "type": "file",
        "source": "../../staging/bin/",
        "destination": "/usr/local/bin/"
    },
    {
      "type": "file",
        "source": "../../staging/",
        "destination": "/root/staging/"
    },
    {
      "type": "file",
        "sources": [
	    "../builder/data/usr/bin/pwnlib",
	    "../builder/data/usr/bin/bettercap-launcher",
	    "../builder/data/usr/bin/pwnagotchi-launcher",
	    "../builder/data/usr/bin/pwngrid-launcher",
	    "../builder/data/usr/bin/monstop",
	    "../builder/data/usr/bin/monstart",
	    "../builder/data/usr/bin/hdmion",
	    "../builder/data/usr/bin/hdmioff"
	],
        "destination": "/usr/bin/"
    },

    {
      "type": "file",
	"sources": [
	    "../builder/data/etc/network/interfaces.d/lo-cfg",
	    "../builder/data/etc/network/interfaces.d/wlan0-cfg",
	    "../builder/data/etc/network/interfaces.d/usb0-cfg",
	    "../builder/data/etc/network/interfaces.d/eth0-cfg"
	],
      "destination": "/etc/network/interfaces.d/"
    },

    {
      "type": "file",
	"sources": [
	    "../builder/data/etc/systemd/system/pwngrid-peer.service",
	    "../builder/data/etc/systemd/system/pwnagotchi.service",
	    "../builder/data/etc/systemd/system/bettercap.service"
	],
	"destination": "/etc/systemd/system/"
    },

    {
      "type": "shell",
      "inline": [
        "chmod +x /usr/bin/*"
      ]
    },

    {
      "type": "file",
      "source": "../builder/data/etc/update-motd.d/01-motd",
      "destination": "/etc/update-motd.d/01-motd"
    },
    {
      "type": "shell",
      "inline": [
        "chmod +x /etc/update-motd.d/*"
      ]
    },
    {
      "type": "shell",
      "inline": [
	"echo APT UPDATE",
        "apt-get -y --allow-releaseinfo-change update",
	"echo APT UPGRADE",
        "apt-get -y upgrade",
	"apt install -y ansible"
      ]
    },
    {
      "type": "ansible-local",
      "playbook_dir": "../builder/",
      "playbook_file": "../builder/pwnagotchi.yml",
      "extra_arguments": [
        "--extra-vars \"ansible_python_interpreter=/usr/bin/python3\"", "-vvv"
      ],
      "command": "ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 PWN_VERSION={{user `pwn_version`}} PWN_HOSTNAME={{user `pwn_hostname`}} ansible-playbook"
    },

    {
      "type": "shell",
      "inline": [ "echo Directory Download not implemented, so doing it the old fashioned way",
		  "echo Creating archive of /root/staging",
		  "tar -C /root/staging -cvzf /root/staging.tgz ." ]
    },
    {
      "type": "file",
        "source": "/root/staging.tgz",
        "destination": "../../",
	"direction": "download"
    },
    {
      "type": "shell",
      "inline": [
	"echo Removing staging directory from image",
        "rm -rf /root/staging /root/staging.tgz"
      ]
    },
    {
      "type": "shell-local",
      "inline": [
	"echo Unpacking staged artifacts to 'incoming' directory",
	"mkdir -p ../../incoming",
	"tar -C ../../incoming/ --overwrite -xvzf ../../staging.tgz",
	"rm ../../staging.tgz",
	"chmod -R a+rwX ../../incoming"
      ]
    }
  ]
}
